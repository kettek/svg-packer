class {
  handleClose() {
    this.emit('close')
  }
}

style {
  .modalBox {
    position: absolute;
    left: 50vw;
    top: 50vh;
    display: grid;
    grid-template-rows: 2.75rem 1fr;
    box-shadow: 0 0 0.5rem #000;
    animation-name: modalBoxIn;
    animation-duration: .5s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
  }
  @keyframes modalBoxIn {
    from {
      opacity: 0;
      width: 0vw;
      height: 0vh;
      margin-left: 0vw;
      margin-top: 0vh;
    }
    to {
      opacity: 1;
      width: 80vw;
      height: 80vh;
      margin-left: -40vw;
      margin-top: -40vh;
    }
  }
  .modalBox::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #ff0000 0%, #00ff00 50%, #0000ff 100%);
  }
  .modalBox_header {
    padding: .5em;
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: auto 1em;
    user-select: none;
    z-index: 1;
    color: #fff;
    font-size: 1.25rem;
    text-shadow: 0 0 0.25rem #000;
  }
  .modalBox_header_title {
    font-family: 'Major Mono Display', monospace;
  }
  .modalBox_header_buttons > * {
    font-family: 'Major Mono Display', monospace;
    cursor: pointer;
    transition: .3s color;
  }
  .modalBox_header_buttons > *:hover {
    color: #000;
  }

  .modalBox_content {
    background: rgba(0,0,0,.9);
    color: #fff;
    border: .5em solid #000;
    overflow: auto;
    z-index: 1;
    font-family: 'Oswald', sans-serif;
  }
}

div.modalBox
  header.modalBox_header
    span.modalBox_header_title -- ${input.title}
    span.modalBox_header_buttons
      span.modalBox_header_buttons_close on-click('handleClose') -- X
  div.modalBox_content
    <${input.renderBody}/>